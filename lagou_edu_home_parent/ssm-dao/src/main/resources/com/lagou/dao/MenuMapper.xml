<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.MenuMapper">

    <resultMap id="menuResult" type="menu">
        <id column="id" property="id"></id>
        <result column="href" property="href"></result>
        <result column="icon" property="icon"></result>
        <result column="name" property="name"></result>
        <result column="parent_id" property="parentId"></result>
        <result column="description" property="description"></result>
        <result column="orderNum" property="order_num"></result>
        <result column="shown" property="shown"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="updated_time" property="updatedTime"></result>
        <result column="created_by" property="createdBy"></result>
        <result column="updated_by" property="updatedBy"></result>

<!--        其次要查询顶级菜单所关联的子级菜单信息
                查询出父级菜单信息，再根据父级菜单的id值，查询出父级菜单所关联的子级菜单的信息
-->
        <collection property="subMenuList" ofType="Menu" select="findSubMenuListByPid" column="id"/>
    </resultMap>


<!--    查询所有父子菜单信息-->
    <select id="findSubMenuListByPid" resultMap="menuResult" parameterType="int">
<!-- 第一次发送的SQL，根据父级菜单parent_id的值都为-1，查询出的结果对每条记录进行封装时，是走上面的ResultMap
        进行嵌套查询，select 实际还是去调用这条SQL，再次调用的时候所传递的值就是 第一次查询出来的 父级菜单的id值
            根据父级菜单的id值，查询出父级菜单所有关联的子菜单信息。把子菜单信息封装到 Menu实体里的 subMenuList
 -->
        -- 首先先查询顶级（父级）菜单（所有顶级菜单，他们的parent_id的值都为-1）
SELECT * FROM menu WHERE parent_id = #{id}
    </select>




<!--    查询所有菜单信息-->
    <select id="findAllMenu" resultType="menu">
        select * from menu
    </select>


<!--    根据id查询menu-->
    <select id="finMenuById" parameterType="int" resultType="menu">
        select * from menu where id = #{id}
    </select>


<!--添加菜单 void saveMenu(Menu menu);-->
    <insert id="saveMenu" parameterType="menu">
        insert into menu values(null,#{parentId},#{href},#{icon},#{name},#{description},#{orderNum},
        #{shown},#{level},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>


<!--    修改菜单 void updateMenu(Menu menu);-->
    <update id="updateMenu" parameterType="menu">
        update menu
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">
                name = #{name},
            </if>

            <if test="href != null and href != ''">
                href=#{href},
            </if>

            <if test="parentId != null and parentId != ''">
                parent_id=#{parentId},
            </if>

            <if test="description != null and description != ''">
                description=#{description},
            </if>

            <if test="icon != null and icon != ''">
                icon=#{icon},
            </if>

            <if test="shown != null and shown != ''">
                shown=#{shown},
            </if>

            <if test="orderNum != null and orderNum != ''">
                order_num=#{orderNum},
            </if>

            <if test="createdTime != null">
                created_time=#{createdTime},
            </if>

            <if test="updatedTime != null">
                updated_time=#{updatedTime},
            </if>

            <if test="createdBy != null and createdBy != ''">
                created_by=#{createdBy},
            </if>

            <if test="updatedBy != null and updatedBy != ''">
                updated_by=#{updatedBy},
            </if>
        </trim>

        <where>
            <if test="id!=null and id != '' ">id=#{id}</if>
        </where>
    </update>


<!--    删除菜单  void deleteMenu(int id);-->
    <delete id="deleteMenu" parameterType="int">
        delete from menu where id = #{id}
    </delete>
</mapper>