<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">


    <!--    配置前端控制器-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--    初始化参数
                    指定该servlet在执行初始化方法时，获取到初始化参数，并去加载springmvc的核心配置文件
        -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--    让服务器启动时就完成servlet的实例化并执行初始化操作，去加载springmvc.xml
                    所以添加load-on-startup 标签
                        这样的话，在服务器启动时，就会对该servlet进行实例化并初始化，初始化时区加载 springmvc.xml
        -->
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <!--        表示对所有请求都进行拦截，不包含静态资源-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>


    <!--    中文乱码过滤器，解决post请求乱码问题-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!--    初始化参数 指定编码-->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <!--        对所有资源都进行拦截-->
        <url-pattern>/*</url-pattern>
    </filter-mapping>



    <!--    spring的监听器 contextLoaderListener
                监听servletContext 对象的创建，服务器启动时就创建了
                    然后监听器就会去加载applicationContext.xml
                        而在applicationContext.xml 中又通过import标签 引入了 service层和dao层的 applicationContext.xml
                            所以在服务器启动时，这些配置文件同时都被加载了
        -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--    全局参数-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!--        在服务器启动时，加载 applicationContext.xml ，并把拆分过后的 applicationContext.xml 文件都加载-->
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>




    <!--    配置跨域过滤器，由于前后端分离会产生跨域问题-->
    <filter>
        <filter-name>corsFilter</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>corsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>





</web-app>